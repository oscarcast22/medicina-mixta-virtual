---
import BaseLayout from "../../layouts/BaseLayout.astro";
import Nav from "../../sections/Nav.astro";
import LicenciaturaHero from "../../sections/LicenciaturaHero.astro";
import Footer from "../../sections/Footer.astro";
import { getCollection } from "astro:content";
import LargeView from "../../sections/enfermeria/DesktopView.astro";
import MobileView from "../../sections/enfermeria/MobileView.astro";
import Enfermeria from "../../icons/enfermeria.astro";
import WhatsAppWidget from "../../components/WhatsAppWidget.astro";

const licenciaturas = await getCollection('licenciaturas');

const enfermeriaData = licenciaturas.find(l => l.data.titulo === "Enfermer√≠a")

if (!enfermeriaData) {
  throw new Error("Enfermeria data not found");
}
---
<BaseLayout title="Enfermeria Mixta-Virtual" description="Sitio principal de Enfermeria Mixta Virtual UAD">
    <Nav LicenciaturaTitle="Enfermeria"/>
    <LicenciaturaHero 
        image={enfermeriaData.data.portada}
        title={enfermeriaData.data.titulo}
        rvoe={enfermeriaData.data.rvoe} 
    >
        <Enfermeria width="102px" />
    </LicenciaturaHero>
    <main id="enfermeria">
        <div class="max-w">
            <LargeView data={enfermeriaData.data} />
            <MobileView data={enfermeriaData.data} />
        </div>
        <WhatsAppWidget />
        <Footer />
    </main>
</BaseLayout>

<style>
    main {
        background: var(--gray-950);
        margin-top: 50vh;
    }

    .max-w {
        padding: 30px 20px;
        max-width: 1280px;
        margin: auto;
    }
</style>

<style is:global>
    .modal {
        display: none;
        position: fixed;
        flex-direction: column;
        justify-content: center;
        align-items: end;
        z-index: 250;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgb(0,0,0);
        background-color: rgba(0,0,0,0.9);
        opacity: 0;
        transition: opacity 0.5s ease;
    }

    .modal.show {
        display: flex;
        opacity: 1;
    }

    .modal-content {
        margin: 10px auto;
        display: block;
        width: 95%;
        max-width: 1080px;
        animation: modalContentShow 0.5s ease;
    }

    .close {
        color: #fff;
        font-size: 40px;
        font-weight: bold;
        transition: 0.3s;
        cursor: pointer;
        margin: 0 3.5vw 0;
    }

    .close:hover,
    .close:focus {
        color: #bbb;
        text-decoration: none;
        cursor: pointer;
    }

    @media only screen and (max-width: 700px) {
        .modal-content {
            width: 98%;
        }
    }

    @keyframes modalContentShow {
        from {
            transform: scale(0.8);
            opacity: 0;
        }
        to {
            transform: scale(1);
            opacity: 1;
        }
    }
</style>

<script>
    function initializeLargeView(): void {
        const buttons: NodeListOf<HTMLElement> = document.querySelectorAll('.menu-btn');
        const sections: NodeListOf<HTMLElement> = document.querySelectorAll('.content-section > div');
        const contentContainer: HTMLElement | null = document.querySelector('.content-section');

        function animateHeight(element: HTMLElement, from: number, to: number): void {
            element.style.height = `${from}px`;
            element.offsetHeight;
            element.style.transition = 'height 0.5s ease';
            element.style.height = `${to}px`;
        }

        let defaultSectionId: string = 'proposito-content';
        const hash = window.location.hash;
        const internalNavigation = sessionStorage.getItem('internalNavigation');

        if (hash) {
            switch (hash.toLowerCase()) {
                case '#plan_de_estudios':
                    defaultSectionId = 'plan-content';
                    break;
                case '#mapa_curricular':
                    defaultSectionId = 'perfil-content';
                    break;
            }
        } else if (internalNavigation === 'true') {
            const savedSectionId = sessionStorage.getItem('defaultSectionId');
            if (savedSectionId) {
                defaultSectionId = savedSectionId;
            }
        }

        const defaultSection: HTMLElement | null = document.getElementById(defaultSectionId);

        sections.forEach((section: HTMLElement) => {
            section.classList.add('hidden');
            section.classList.remove('fade-in');
        });

        if (defaultSection) {
            defaultSection.classList.remove('hidden');
            defaultSection.classList.add('fade-in');

            const defaultButton: HTMLElement | null = document.querySelector(`[data-target="${defaultSectionId}"]`);
            if (defaultButton) {
                defaultButton.classList.add('selected');
            }
        }

        if (contentContainer && defaultSection) {
            contentContainer.style.height = `${defaultSection.scrollHeight}px`;
        }

        buttons.forEach((button: HTMLElement) => {
            button.addEventListener('click', function (this: HTMLElement) {
                buttons.forEach((btn: HTMLElement) => btn.classList.remove('selected'));
                this.classList.add('selected');

                const target = this.getAttribute('data-target');
                const targetSection = target ? document.getElementById(target) : null;

                if (target) {
                    sessionStorage.setItem('defaultSectionId', target);
                    sessionStorage.setItem('internalNavigation', 'true');
                }

                if (contentContainer && targetSection) {
                    const currentHeight = contentContainer.scrollHeight;

                    sections.forEach((section: HTMLElement) => {
                        section.classList.add('hidden');
                        section.classList.remove('fade-in');
                    });

                    targetSection.classList.remove('hidden');
                    targetSection.classList.add('fade-in');

                    requestAnimationFrame(() => {
                        animateHeight(contentContainer, currentHeight, targetSection.scrollHeight + 15);
                    });
                }
            });
        });
    }

    function setupCollapsibles(): void {
        const collapses: NodeListOf<Element> = document.querySelectorAll('.collapse');

        collapses.forEach((collapse: Element) => {
            const button: HTMLElement | null = collapse.querySelector('.menu-btn-m');
            const content: HTMLElement | null = collapse.querySelector('.collapse-content');
            const collapseId: string | null = content ? content.id : null;

            if (button && content) {
                const newButton: HTMLElement = button.cloneNode(true) as HTMLElement;
                button.parentNode?.replaceChild(newButton, button);

                newButton.addEventListener('click', function () {
                    const isOpen: boolean = collapse.classList.contains('open');

                    collapses.forEach((otherCollapse: Element) => {
                        const otherButton: HTMLElement | null = otherCollapse.querySelector('.menu-btn-m');
                        const otherContent: HTMLElement | null = otherCollapse.querySelector('.collapse-content');

                        if (otherCollapse !== collapse) {
                            otherCollapse.classList.remove('open');
                            if (otherButton) {
                                otherButton.classList.remove('selected');
                            }
                            if (otherContent) {
                                otherContent.style.height = '0px';
                            }
                        }
                    });

                    let additionalHeight: number = 0;

                    switch (collapseId) {
                        case 'proposito-content':
                            if (window.innerWidth <= 306) {
                                additionalHeight = 135;
                            } else if (window.innerWidth <= 314) {
                                additionalHeight = 110;
                            } else if (window.innerWidth <= 343) {
                                additionalHeight = 90;
                            } else if (window.innerWidth <= 350) {
                                additionalHeight = 125;
                            } else if (window.innerWidth <= 365) {
                                additionalHeight = 115;
                            } else if (window.innerWidth <= 455) {
                                additionalHeight = 80;
                            } else if (window.innerWidth <= 475) {
                                additionalHeight = 110;
                            } else {
                                additionalHeight = 50;
                            }
                            break;
                        case 'plan-content':
                            additionalHeight = 25;
                            break;
                        case 'perfil-content':
                        if (window.innerWidth <= 350) {
                                additionalHeight = 160;
                            } else if (window.innerWidth <= 375) {
                                additionalHeight = 135;
                            } else {
                                additionalHeight = 100;
                            }
                            break;
                        default:
                            additionalHeight = 0;
                            break;
                    }

                    if (isOpen) {
                        collapse.classList.remove('open');
                        newButton.classList.remove('selected');
                        content.style.height = '0px';
                    } else {
                        collapse.classList.add('open');
                        newButton.classList.add('selected');
                        content.style.height = `${content.scrollHeight + additionalHeight}px`;
                    }
                });
            }
        });
    }

    function checkWindowSize(): void {
        const largeView: HTMLElement | null = document.getElementById('desktop-view');
        const mobileView: HTMLElement | null = document.getElementById('mobile-view');

        const isSmallScreen: boolean = window.innerWidth <= 600;

        if (isSmallScreen) {
            if (largeView) {
                largeView.style.display = 'none';
            }
            if (mobileView) {
                mobileView.style.display = 'flex';
                setupCollapsibles();
            }
        } else {
            if (mobileView) {
                mobileView.style.display = 'none';
            }
            if (largeView) {
                largeView.style.display = 'grid';
                initializeLargeView();
            }
        }
    }

    document.addEventListener('DOMContentLoaded', checkWindowSize);
    document.addEventListener('astro:after-swap', checkWindowSize);
    document.addEventListener('astro:page-load', checkWindowSize);
    window.addEventListener('resize', checkWindowSize);
    document.addEventListener('DOMContentLoaded', () => {
        sessionStorage.setItem('internalNavigation', 'false');
        checkWindowSize();
    });
    document.addEventListener('astro:after-swap', () => {
        sessionStorage.setItem('internalNavigation', 'false');
        checkWindowSize();
    });
    document.addEventListener('astro:page-load', () => {
        sessionStorage.setItem('internalNavigation', 'false');
        checkWindowSize();
    });
</script>
