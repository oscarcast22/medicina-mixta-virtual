---
import BaseLayout from "../layouts/BaseLayout.astro";
import Nav from "../sections/Nav.astro";
import LicenciaturaHero from "../sections/LicenciaturaHero.astro";
import Medicina from "../icons/medicina.astro";
import Footer from "../sections/Footer.astro";
import { getCollection } from "astro:content";
import LargeView from "../sections/medicina/LargeView.astro";
import MobileView from "../sections/medicina/MobileView.astro";

const licenciaturas = await getCollection('licenciaturas');

const medicinaData = licenciaturas.find(l => l.data.titulo === "Medicina General")

if (!medicinaData) {
  throw new Error("Medicina General data not found");
}

console.log(medicinaData.data)
---
<BaseLayout title="Medicina Mixta Virtual" description="Sitio principal de Medicina Mixta Virtual UAD">
    <Nav LicenciaturaTitle="Medicina" LicenciaturaSlug={"medicina_mixta_virtual"}/>
    <LicenciaturaHero 
        image={medicinaData.data.portada}
        title={medicinaData.data.titulo}
        rvoe={medicinaData.data.rvoe} 
    >
        <Medicina width="102px" />
    </LicenciaturaHero>
    <main id="medicina">
        <div class="max-w">
            <LargeView data={medicinaData.data} />
            <MobileView data={medicinaData.data} />
        </div>
        <Footer />
    </main>
</BaseLayout>

<style>
    main {
        background: var(--gray-950);
    }

    .max-w {
        padding: 30px 20px;
        max-width: 1280px;
        margin: auto;
    }
</style>

<script>
    document.addEventListener('astro:page-load', function () {
        const largeView = document.getElementById('large-view') as HTMLElement | null;
        const mobileView = document.getElementById('mobile-view') as HTMLElement | null;

        let largeViewParent = largeView ? largeView.parentElement as HTMLElement | null : null;
        let mobileViewParent = mobileView ? mobileView.parentElement as HTMLElement | null : null;

        function checkWindowSize(): void {
            if (window.innerWidth <= 600) {
                if (largeView && largeViewParent && largeViewParent.contains(largeView)) {
                    largeViewParent.removeChild(largeView);
                }
                if (mobileView && mobileViewParent && !mobileViewParent.contains(mobileView)) {
                    mobileViewParent.appendChild(mobileView);
                }
            } else {
                if (mobileView && mobileViewParent && mobileViewParent.contains(mobileView)) {
                    mobileViewParent.removeChild(mobileView);
                }
                if (largeView && largeViewParent && !largeViewParent.contains(largeView)) {
                    largeViewParent.appendChild(largeView);
                }
            }
        }

        window.addEventListener('resize', checkWindowSize);
        checkWindowSize();
    });
</script>



<script>
function updateModalImage(): void {
    const modal = document.getElementById('modal') as HTMLElement | null;
    const img = document.getElementById('mapa-img') as HTMLImageElement | null;
    const modalContent = document.getElementById('img-modal') as HTMLImageElement | null;
    const caption = document.getElementById('caption') as HTMLElement | null;

    if (img && modal && modalContent && caption) {
        img.onclick = function(): void {
            console.log("img click");
            modal.style.display = 'flex';
            setTimeout(() => {
                modal.classList.add('show');
            }, 10);
            modalContent.src = img.src;
            caption.innerHTML = img.alt;
        }
    }
}

function showModal(): void {
    const mapa = document.getElementById('mapa');
    if (mapa && !document.getElementById('modal')) {
        const modal = document.createElement('div');
        modal.setAttribute('class', 'modal');
        modal.setAttribute('id', 'modal');

        const closeModal = document.createElement('span');
        closeModal.setAttribute('class', 'close');
        closeModal.innerHTML = '&times;';

        const modalContent = document.createElement('img');
        modalContent.setAttribute('class', 'modal-content');
        modalContent.setAttribute('id', 'img-modal');

        const caption = document.createElement('div');
        caption.setAttribute('id', 'caption');

        modal.appendChild(closeModal);
        modal.appendChild(modalContent);
        modal.appendChild(caption);
        document.body.appendChild(modal);

        updateModalImage();

        closeModal.onclick = function(): void {
            modal.classList.remove('show');
            setTimeout(() => {
                modal.style.display = 'none';
            }, 500);
        }

        window.onclick = function(event: MouseEvent): void {
            if (event.target == modal) {
                modal.classList.remove('show');
                setTimeout(() => {
                    modal.style.display = 'none';
                }, 500);
            }
        }
    }
}

document.addEventListener('astro:page-load', function (): void {
    showModal();
    updateModalImage(); // Asegura que la imagen se capture al cargar la p√°gina
    window.addEventListener('resize', updateModalImage);
    // Check and update image periodically until it is present
    const checkImage = setInterval(function(): void {
        const img = document.getElementById('mapa-img');
        if (img) {
            updateModalImage();
            clearInterval(checkImage);
        }
    }, 100);
});
</script>


<style is:global>
    .modal {
        display: none;
        position: fixed;
        flex-direction: column;
        justify-content: center;
        align-items: end;
        z-index: 250;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgb(0,0,0);
        background-color: rgba(0,0,0,0.9);
        opacity: 0;
        transition: opacity 0.5s ease;
    }

    .modal.show {
        display: flex;
        opacity: 1;
    }

    .modal-content {
        margin: 10px auto;
        display: block;
        width: 95%;
        max-width: 1080px;
        animation: modalContentShow 0.5s ease;
    }

    .close {
        color: #fff;
        font-size: 40px;
        font-weight: bold;
        transition: 0.3s;
        cursor: pointer;
        margin: 0 3.5vw 0;
    }

    .close:hover,
    .close:focus {
        color: #bbb;
        text-decoration: none;
        cursor: pointer;
    }

    @media only screen and (max-width: 700px) {
        .modal-content {
            width: 98%;
        }
    }

    @keyframes modalContentShow {
        from {
            transform: scale(0.8);
            opacity: 0;
        }
        to {
            transform: scale(1);
            opacity: 1;
        }
    }
</style>
    