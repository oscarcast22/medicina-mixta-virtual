---
interface Props {
    image: string;
    title: string;
    rvoe: string;
}

const { image, title, rvoe } = Astro.props
---
<section class="hero" id="hero-lic">
    <div class="image-container">
        <img src={image} alt="">
    </div>
    <div 
        class="content"
        data-aos="zoom-in-up"
        data-aos-duration="650"
    >
        <slot />
        <h1 class="title">{title}</h1>
        <h4 class="subtitle extra-light">Modalidad Mixta-Virtual</h4>
        <p class="rvoe extra-light">Acuerdo RVOE {rvoe}</p>
    </div>
</section>

<style>
    .hero {
        z-index: -5;
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        height: 50vh;
        overflow: hidden;
        position: relative;
    }

    .image-container {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        overflow: hidden;
    }

    .image-container img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .content {
        z-index: 0;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        text-align: center;
    }

    .title,
    .subtitle,
    .rvoe {
        color: var(--white);
        margin: 0;
    }

    .title {
        margin: 20px 0 0;
        text-transform: uppercase
    }

    .rvoe {
        margin: 5px 0 0;
        padding: 8px 16px;
        background: var(--black);
        border-radius: 10px;
    }



</style>

<script>
    document.addEventListener('astro:page-load', function() {
        const hero = document.getElementById('hero-lic');
        
        if (hero) {
            window.addEventListener('scroll', function() {
                const scrollPosition = window.scrollY;
                const heroBottom = hero.offsetTop;
                if (scrollPosition >= heroBottom) {
                    const distanceFromBottom = scrollPosition - heroBottom;
                    const parallaxValue = distanceFromBottom * .7;
                    hero.style.transform = `translateY(${parallaxValue}px)`;
                }
            });
        }
    });
</script>