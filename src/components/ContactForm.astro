<form action="/agradecimiento" id="contactForm" data-astro-reload>
    <h1>Contacto</h1>
    <div class="form-input">
        <label for="nombre">Nombre</label><br>
        <input type="text" id="nombre" name="nombre" placeholder="Introducir nombre" required>
    </div>
    <div class="form-input">
        <label for="apellidos">Apellidos</label><br>
        <input type="text" id="apellidos" name="apellidos" placeholder="Introducir apellidos" required>
    </div>
    <div class="form-input">
        <label for="telefono">Teléfono móvil</label><br>
        <input type="tel" id="telefono" name="telefono" pattern="[0-9]{10}" placeholder="Introducir numero de telf." required>
    </div>
    <div class="form-input">
        <label for="email">Correo electrónico</label><br>
        <input type="email" id="email" name="email" placeholder="Introducir correo electr." required>
    </div>
    <div class="form-input">
        <label for="ciudad">Ciudad</label><br>
        <input type="text" id="ciudad" name="ciudad" placeholder="Introducir Ciudad" required>
    </div>
    <div class="form-input">
        <label for="mensaje">Mensaje</label><br>
        <textarea id="mensaje" name="mensaje" rows="4" cols="50" placeholder="Escribe tu mensaje" required/>
    </div>
    <div class="checkbox-container">
        <input type="checkbox" id="tyc" name="tyc" required/>
        <label for="tyc" id="tyc"><span id="openModal">Estoy de acuerdo en proporcionar mis datos para recibir información.</span></label>
    </div>
    <div class="submit-button">
        <input type="submit" value="Enviar" id="submit"/>
    </div>
    <div class="link" style="margin-top: 80px">
        <a href="/">&lt; Regresar</a>
    </div>
    <div class="link">
        <a href="/aviso-de-confidencialidad">Aviso de Confidencialidad</a>
    </div>
</form>

<style>
    form {
        margin: 60px 0 2.5rem 0;
        text-align: left;
    }

    .form-input {
        margin: 12px 0 0;
        position: relative;
    }

    form h1 {
        text-transform: uppercase;
        font-weight: var(--bold);
        font-size: 3.44rem;
        color: var(--white);
    }

    form input,
    textarea {
        width: 100%;
        background: none;
        border-width: 1px;
        border-color: var(--white);
        color: var(--gray-700);
        border-style: groove;
        outline: none;
        margin: 6px 0 0;
        padding: 6px;
    }

    form input:hover,
    textarea:hover {
        border-color: var(--primary);
    }

    form input:focus,
    form textarea:focus {
        border-color: var(--primary);
    }

    form input:focus::placeholder,
    form textarea:focus::placeholder {
        opacity: 0;
    }

    form label {
        font-size: var(--text-xs);
        color: var(--white);
    }

    .checkbox-container {
        width: fit-content;
        margin: 20px 0 0 0;
    }

    .checkbox-container span {
        color: var(--link-color);
        cursor: pointer;
    }

    form input[type="checkbox"] {
        width: fit-content;
        margin-right: 10px;
    }

    form label.error::after {
        content: '*';
        color: var(--errors);
        margin-left: 5px;
        font-weight: bold;
    }

    .submit-button {
        width: fit-content;
        margin: 45px auto 0;
    }

    .submit-button input {
        width: 175px;
        background-color: var(--primary);
        border: none;
        color: var(--white);
        padding: 8px 25px;
        border-radius: 5px;
        text-align: center;
        display: inline-block;
        font-size: var(--text-base);
        font-weight: var(--regular);
        cursor: pointer;
        transition: color 0.3s ease-in-out, background-color 0.3s ease-in-out;
    }

    .submit-button input:hover {
        background-color: var(--white);
        color: var(--primary);
    }

    input::placeholder {
        font-style: italic;
    }

    textarea::placeholder {
        font-style: italic;
    }

    .link {
        color: var(--white);
        width: fit-content;
        margin: 60px auto 0;
        font-size: var(--text-sm);
    }

    .link a:hover {
        color: var(--gray-500);
    }

    @media (max-width: 900px) {
        form h1 {
            font-size: var(--text-3xl);
        }
    }
</style>

<style is:global>
    .error-message {
        position: absolute;
        transition: all .3s;
        background-color: #a7ebff;
        border: 1px solid #7fe1ff;
        padding: 5px;
        margin-top: 5px;
        font-size: 0.8rem;
        z-index: 4;
        left: 50%;
        transform: translateX(-50%);
    }

    .error-message:before {
        content: '';
        position: absolute;
        top: -16px;
        left: 50%;
        transform: translateX(-50%);
        border: 10px solid transparent;
        border-bottom-color: #a7ebff;
    }
</style>

<script>
    document.addEventListener('astro:page-load', function () {
        const form: HTMLFormElement | null = document.getElementById('contactForm') as HTMLFormElement;
    
        if (form) {
            const inputs: NodeListOf<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement> = form.querySelectorAll('input, select, textarea');
            
            inputs.forEach(function (input) {
                input.addEventListener('input', validateInput);
                input.addEventListener('blur', validateInputOnBlur);
            });
        
            function validateInput(event: Event): void {
                const input = event.target as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;
                clearError(input);
            }
        
            function validateInputOnBlur(event: Event): boolean {
                const input = event.target as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;
                let isValid = true;
            
                if (input.id === 'nombre' && input.value.trim() === '') {
                    isValid = false;
                    showError(input);
                }
            
                if (input.id === 'apellidos' && input.value.trim() === '') {
                    isValid = false;
                    showError(input);
                }
            
                if (input.id === 'email') {
                    if (input.value.trim() === '') {
                        isValid = false;
                        showError(input);
                    } else if (!validateEmail(input.value)) {
                        isValid = false;
                        showError(input, 'El correo electrónico no es válido');
                    }
                }
            
                if (input.id === 'telefono') {
                    if (input.value.trim() === '') {
                        isValid = false;
                        showError(input);
                    } else if (!validatePhone(input.value)) {
                        isValid = false;
                        showError(input, 'El teléfono debe tener 10 dígitos');
                    }
                }
            
                if (input.id === 'ciudad' && input.value.trim() === '') {
                    isValid = false;
                    showError(input);
                }
            
                if (input.id === 'mensaje' && input.value.trim() === '') {
                    isValid = false;
                    showError(input);
                }
            
                if (input.id === 'tyc' && !(input as HTMLInputElement).checked) {
                    isValid = false;
                    showError(input);
                }
            
                if (!isValid) {
                    input.classList.add('invalid');
                }
            
                return isValid;
            }
        
            function showError(input: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement, message?: string): void {
                const label = document.querySelector(`label[for=${input.id}]`);
                if (label) {
                    label.classList.add('error');
                }
                if (message) {
                    const error = document.createElement('p');
                    error.className = 'error-message';
                    error.textContent = message;
                    input.parentNode?.insertBefore(error, input.nextSibling);
                }
                input.classList.add('invalid');
            }
        
            function clearError(input: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement): void {
                const label = document.querySelector(`label[for=${input.id}]`);
                const nextElement = input.nextElementSibling;
                if (label) {
                    label.classList.remove('error');
                }
                if (nextElement && nextElement.classList.contains('error-message')) {
                    nextElement.remove();
                }
                input.classList.remove('invalid');
            }
        
            function validateEmail(email: string): boolean {
                const re = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/;
                return re.test(email);
            }
        
            function validatePhone(phone: string): boolean {
                const re = /^[0-9]{10}$/;
                return re.test(phone);
            }
        }
    });
</script>