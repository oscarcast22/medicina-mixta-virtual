---
interface Props {
    titulo: string;
    mapa: string;
}

const { titulo, mapa } = Astro.props
---

<div class="mapa" id="mapa">
    <p>Mapa curricular {titulo} modalidad mixta-virtual</p>
    <img src={mapa} alt={`mapa curriculular de la licenciatura en ${titulo} modalidad mixta-virtual`} id="mapa-img">
</div>

<style>
    .mapa {
    }
    .mapa p {
        text-transform: uppercase;
        font-size: var(--text-xs);
    }

    .mapa img {
        width: 100%;
        cursor: pointer;

    }
</style>

<script>
    function showModal() {
        const mapa = document.getElementById('mapa');
        if (mapa) {
            const modal = document.createElement('div');
            modal.setAttribute('class', 'modal');
            modal.setAttribute('id', 'modal');
            
            const closeModal = document.createElement('span');
            closeModal.setAttribute('class', 'close');
            closeModal.innerHTML = '&times;';
            
            const modalContent = document.createElement('img');
            modalContent.setAttribute('class', 'modal-content');
            modalContent.setAttribute('id', 'img-modal');
            
            const caption = document.createElement('div');
            caption.setAttribute('id', 'caption');
            
            modal.appendChild(closeModal);
            modal.appendChild(modalContent);
            modal.appendChild(caption);
            document.body.appendChild(modal);
            
            const img = document.getElementById('mapa-img') as HTMLImageElement;
            img.onclick = function() {
                modal.style.display = 'flex';
                setTimeout(() => {
                    modal.classList.add('show');
                }, 10);
                modalContent.src = img.src;
                caption.innerHTML = img.alt;
            }
        
            closeModal.onclick = function() {
                modal.classList.remove('show');
                setTimeout(() => {
                    modal.style.display = 'none';
                }, 500);
            }
        
            window.onclick = function(event) {
                if (event.target == modal) {
                    modal.classList.remove('show');
                    setTimeout(() => {
                        modal.style.display = 'none';
                    }, 500);
                }
            }
        }
    }

    document.addEventListener('astro:page-load', showModal);
</script>


<style is:global>
    .modal {
        display: none;
        position: fixed;
        flex-direction: column;
        justify-content: center;
        align-items: end;
        z-index: 250;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgb(0,0,0);
        background-color: rgba(0,0,0,0.9);
        opacity: 0;
        transition: opacity 0.5s ease;
    }

    .modal.show {
        display: flex;
        opacity: 1;
    }

    .modal-content {
        margin: 10px auto;
        display: block;
        width: 95%;
        max-width: 1080px;
        animation: modalContentShow 0.5s ease;
    }

    .close {
        color: #fff;
        font-size: 40px;
        font-weight: bold;
        transition: 0.3s;
        cursor: pointer;
        margin: 0 3.5vw 0;
    }

    .close:hover,
    .close:focus {
        color: #bbb;
        text-decoration: none;
        cursor: pointer;
    }

    @media only screen and (max-width: 700px) {
        .modal-content {
            width: 98%;
        }
    }

    @keyframes modalContentShow {
        from {
            transform: scale(0.8);
            opacity: 0;
        }
        to {
            transform: scale(1);
            opacity: 1;
        }
    }
</style>
